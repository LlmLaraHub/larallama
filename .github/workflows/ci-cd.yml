name: CI-CD

on: [push]

jobs:
  ci:
    runs-on: ubuntu-latest
    env:
      APP_ENV: testing
      BROADCAST_DRIVER: log
    services:
          database:
            image: ankane/pgvector:latest
            env:
              POSTGRES_PASSWORD: password
              POSTGRES_USER: root
              POSTGRES_DB: testing
            ports:
              - 5432:5432
            options: >-
              --health-cmd pg_isready
              --health-interval 10s
              --health-timeout 5s
              --health-retries 5
    strategy:
      fail-fast: false
      matrix:
        php-versions: ["8.2"]
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP, with composer and extensions
        uses: shivammathur/setup-php@v2 #https://github.com/shivammathur/setup-php
        with:
          php-version: ${{ matrix.php-versions }}
          tools: phpmd
          extensions: mbstring, dom, fileinfo, grpc
          coverage: xdebug #optional


      - name: Get composer cache directory
        id: composer-cache
        run: echo "::set-output name=dir::$(composer config cache-files-dir)"

      - name: Cache composer dependencies
        uses: actions/cache@v3
        with:
          path: ${{ steps.composer-cache.outputs.dir }}
          # Use composer.json for key, if composer.lock is not committed.
          # key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.json') }}
          key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
          restore-keys: ${{ runner.os }}-composer-

      - name: Install Composer dependencies
        run: |
          composer config http-basic.packages.craftable.pro "${{ secrets.CRAFTABLE_PRO_EMAIL }}" "${{ secrets.CRAFTABLE_PRO_LICENCE_KEY }}"
          composer install --no-progress --prefer-dist --optimize-autoloader

      - name: Setup application
        run: |
          cp .env.github .env
          php artisan storage:link

      - name: PHP Code Style (phpcs)
        run: |
          composer fix

      - name: PHP Static Review
        run: |
          composer stan

      - name: Test with phpunit
        run: |
          npm install && npm run build
          XDEBUG_MODE=coverage php artisan test --coverage --min=50
  #Hello?
  cd:
    runs-on: ubuntu-latest
    needs: ci
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: 8.2
          tools: composer:v2
          coverage: none
      - name: Install Project Dependencies
        run: |
          curl https://envoyer.io/deploy/${{ secrets.ENVOYER }}
          curl https://envoyer.io/deploy/${{ secrets.ENVOYER_FRESHJONES }}
          curl https://envoyer.io/deploy/${{ secrets.ENVOYER_Q }}
          curl https://envoyer.io/deploy/${{ secrets.ENVOYER_T }}
          curl https://envoyer.io/deploy/${{ secrets.ENVOYER_FH }}
