<?php

namespace Tests\Feature;

use App\Domains\Documents\Transformers\DocXTransformer;
use App\Models\DocumentChunk;
use Illuminate\Support\Facades\Bus;
use Illuminate\Support\Facades\Event;
use Illuminate\Support\Facades\File;
use Tests\TestCase;

class DocXTransformerTest extends TestCase
{
    use SharedSetupForPptFile;

    protected function tearDown(): void
    {
        if (! File::exists($this->document->pathToFile())) {
            File::delete($this->document->pathToFile());
        }
        parent::tearDown(); // TODO: Change the autogenerated stub
    }

    public function test_gets_data_from_docx()
    {
        Event::fake();
        Bus::fake();
        $document = $this->setupFile('example.docx');

        $this->assertDatabaseCount('document_chunks', 0);
        $transformer = new DocXTransformer();
        $transformer->handle($document);
        $this->assertDatabaseCount('document_chunks', 1);

        $this->assertEquals('Lorem ipsum dolor sit amet.', DocumentChunk::first()->content);

    }

    public function test_does_not_repeat()
    {
        Event::fake();
        Bus::fake();
        $document = $this->setupFile('example.docx');

        $this->assertDatabaseCount('document_chunks', 0);
        $transformer = new DocXTransformer();
        $transformer->handle($document);
        $this->assertDatabaseCount('document_chunks', 1);
        $transformer->handle($document);
        $this->assertDatabaseCount('document_chunks', 1);

    }

    public function test_gets_data_from_docx_with_page_breaks()
    {
        Event::fake();
        Bus::fake();
        $document = $this->setupFile('page-breaks.docx');

        $this->assertDatabaseCount('document_chunks', 0);
        $transformer = new DocXTransformer();
        $transformer->handle($document);
        $this->assertDatabaseCount('document_chunks', 1);

        $content = get_fixture('page-breaks.text', false);
        $this->assertEquals($content, DocumentChunk::first()->content);
    }

    public function test_gets_data_from_docx_with_tables()
    {
        Event::fake();
        Bus::fake();
        $document = $this->setupFile('docx-tables.docx');

        $this->assertDatabaseCount('document_chunks', 0);
        $transformer = new DocXTransformer();
        $transformer->handle($document);
        $this->assertDatabaseCount('document_chunks', 1);

        $content = get_fixture('docx-tables.text', false);

        $this->assertStringContainsString(DocumentChunk::first()->content, $content);
    }

    public function test_gets_data_from_docx_with_text_break()
    {
        Event::fake();
        Bus::fake();
        $document = $this->setupFile('handbook-1p.docx');

        $this->assertDatabaseCount('document_chunks', 0);
        $transformer = new DocXTransformer();
        $transformer->handle($document);
        $this->assertDatabaseCount('document_chunks', 7);

        $this->assertNotEmpty(DocumentChunk::first()->content);
    }

    public function test_gets_data_from_docx_with_many_pages()
    {
        Event::fake();
        Bus::fake();
        $document = $this->setupFile('handbook-872p.docx');

        $this->assertDatabaseCount('document_chunks', 0);
        $transformer = new DocXTransformer();
        $transformer->handle($document);
        $this->assertDatabaseCount('document_chunks', 1594);

    }
}
